{
  "contractName": "IERC777Sender",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "tokensToSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensToSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensSender standard as defined in the EIP. {IERC777} Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensToSend(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":\"IERC777Sender\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0xfa4e8ef2081a436b65450d1b8c1142b448f57b19b5b660f0218b3a02d3e9d995\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f717b4928d4604a165badc7a462da20724ccfba1bebe2a02fafa5cf553dbbe0\",\"dweb:/ipfs/QmSdQSoEed45Rw4AKv4zf3Qb6EoU2kiYjdK9TrnDaALjiM\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n *\n * {IERC777} Token holders can be notified of operations performed on their\n * tokens by having a contract implement this interface (contract holders can be\n * their own implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Sender {\n    /**\n     * @dev Called by an {IERC777} token contract whenever a registered holder's\n     * (`from`) tokens are about to be moved or destroyed. The type of operation\n     * is conveyed by `to` being the zero address or not.\n     *\n     * This call occurs _before_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n",
  "sourcePath": "/home/lanor/Consensys/0.project/blockchain-developer-bootcamp-final-project/DjangoApp/contracts/@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
  "ast": {
    "absolutePath": "project:/contracts/@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
    "exportedSymbols": {
      "IERC777Sender": [
        15781
      ]
    },
    "id": 15782,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15763,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:223"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 15764,
          "nodeType": "StructuredDocumentation",
          "src": "58:419:223",
          "text": " @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n {IERC777} Token holders can be notified of operations performed on their\n tokens by having a contract implement this interface (contract holders can be\n their own implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."
        },
        "fullyImplemented": false,
        "id": 15781,
        "linearizedBaseContracts": [
          15781
        ],
        "name": "IERC777Sender",
        "nameLocation": "488:13:223",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 15765,
              "nodeType": "StructuredDocumentation",
              "src": "508:478:223",
              "text": " @dev Called by an {IERC777} token contract whenever a registered holder's\n (`from`) tokens are about to be moved or destroyed. The type of operation\n is conveyed by `to` being the zero address or not.\n This call occurs _before_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\n This function may revert to prevent the operation from being executed."
            },
            "functionSelector": "75ab9782",
            "id": 15780,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokensToSend",
            "nameLocation": "1000:12:223",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15767,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1030:8:223",
                  "nodeType": "VariableDeclaration",
                  "scope": 15780,
                  "src": "1022:16:223",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:223",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15769,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1056:4:223",
                  "nodeType": "VariableDeclaration",
                  "scope": 15780,
                  "src": "1048:12:223",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:223",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15771,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1078:2:223",
                  "nodeType": "VariableDeclaration",
                  "scope": 15780,
                  "src": "1070:10:223",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:7:223",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15773,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1098:6:223",
                  "nodeType": "VariableDeclaration",
                  "scope": 15780,
                  "src": "1090:14:223",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:223",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15775,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "1129:8:223",
                  "nodeType": "VariableDeclaration",
                  "scope": 15780,
                  "src": "1114:23:223",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15774,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:5:223",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15777,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "1162:12:223",
                  "nodeType": "VariableDeclaration",
                  "scope": 15780,
                  "src": "1147:27:223",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15776,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:5:223",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1012:168:223"
            },
            "returnParameters": {
              "id": 15779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1189:0:223"
            },
            "scope": 15781,
            "src": "991:199:223",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 15782,
        "src": "478:714:223"
      }
    ],
    "src": "33:1160:223"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
    "exportedSymbols": {
      "IERC777Sender": [
        15781
      ]
    },
    "id": 15782,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15763,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:223"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 15764,
          "nodeType": "StructuredDocumentation",
          "src": "58:419:223",
          "text": " @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n {IERC777} Token holders can be notified of operations performed on their\n tokens by having a contract implement this interface (contract holders can be\n their own implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."
        },
        "fullyImplemented": false,
        "id": 15781,
        "linearizedBaseContracts": [
          15781
        ],
        "name": "IERC777Sender",
        "nameLocation": "488:13:223",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 15765,
              "nodeType": "StructuredDocumentation",
              "src": "508:478:223",
              "text": " @dev Called by an {IERC777} token contract whenever a registered holder's\n (`from`) tokens are about to be moved or destroyed. The type of operation\n is conveyed by `to` being the zero address or not.\n This call occurs _before_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\n This function may revert to prevent the operation from being executed."
            },
            "functionSelector": "75ab9782",
            "id": 15780,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokensToSend",
            "nameLocation": "1000:12:223",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15767,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1030:8:223",
                  "nodeType": "VariableDeclaration",
                  "scope": 15780,
                  "src": "1022:16:223",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:223",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15769,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1056:4:223",
                  "nodeType": "VariableDeclaration",
                  "scope": 15780,
                  "src": "1048:12:223",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:223",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15771,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1078:2:223",
                  "nodeType": "VariableDeclaration",
                  "scope": 15780,
                  "src": "1070:10:223",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:7:223",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15773,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1098:6:223",
                  "nodeType": "VariableDeclaration",
                  "scope": 15780,
                  "src": "1090:14:223",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:223",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15775,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "1129:8:223",
                  "nodeType": "VariableDeclaration",
                  "scope": 15780,
                  "src": "1114:23:223",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15774,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:5:223",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15777,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "1162:12:223",
                  "nodeType": "VariableDeclaration",
                  "scope": 15780,
                  "src": "1147:27:223",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15776,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:5:223",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1012:168:223"
            },
            "returnParameters": {
              "id": 15779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1189:0:223"
            },
            "scope": 15781,
            "src": "991:199:223",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 15782,
        "src": "478:714:223"
      }
    ],
    "src": "33:1160:223"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-04T22:31:32.081Z",
  "devdoc": {
    "details": "Interface of the ERC777TokensSender standard as defined in the EIP. {IERC777} Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.",
    "kind": "dev",
    "methods": {
      "tokensToSend(address,address,address,uint256,bytes,bytes)": {
        "details": "Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}